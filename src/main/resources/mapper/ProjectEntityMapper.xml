<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zwy.ciserver.dao.ProjectEntityMapper">
    <resultMap id="BaseResultMap" type="com.zwy.ciserver.entity.ProjectEntity">
        <result column="project_id" property="projectId" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="repo" property="repo" jdbcType="VARCHAR"/>
        <result column="branch" property="branch" jdbcType="VARCHAR"/>
        <result column="cur_version" property="curVersion" jdbcType="VARCHAR"/>
        <result column="build_status" property="buildStatus" jdbcType="INTEGER"/>
        <result column="integrate_status" property="integrateStatus" jdbcType="INTEGER"/>
        <result column="descr" property="descr" jdbcType="VARCHAR"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_update" property="gmtUpdate" jdbcType="TIMESTAMP"/>
        <collection property="modules" ofType="com.zwy.ciserver.model.request.ProjectModuleReq">
            <id property="linkId" column="id"></id>
            <result property="moduleBuildId" column="module_build_id"/>
            <result property="moduleName" column="module_name"></result>
            <result property="version" column="version"></result>
            <result property="moduleId" column="module_id"></result>
        </collection>
    </resultMap>
    <sql id="TABLE">
        t_project
    </sql>
    <sql id="COLUMN">
        t_project.project_id, name, repo, branch, cur_version, t_project.build_status, integrate_status, descr, t_project.gmt_create, gmt_update
    </sql>

    <update id="updateProject">
        update
        <include refid="TABLE"/>
        <set>
            `name` = #{name}, repo = #{repo}, branch = #{branch},
            <if test="descr!=null">descr = #{descr},</if>
        </set>
        where project_id = #{projectId}
    </update>

    <update id="updateProjectModuleVersion">
        update
        t_project_module
        <set>
            module_build_id = #{moduleBuildId}
        </set>
        where id = #{linkId}
    </update>

    <delete id="deleteProjectById">
        delete from
        <include refid="TABLE"/>
        where project_id = #{projectId}
    </delete>

    <insert id="insertProject" parameterType="com.zwy.ciserver.entity.ProjectEntity" useGeneratedKeys="true"
            keyProperty="projectId">
        insert into
        <include refid="TABLE"/>
        (`name`, repo, branch, descr)
        values (#{name}, #{repo}, #{branch}, #{descr})
    </insert>

    <select id="selectProjects" resultMap="BaseResultMap">
        select
        <include refid="COLUMN"/>
        from
        <include refid="TABLE"/>
    </select>

    <select id="selectProjectByName" resultMap="BaseResultMap">
        select
        <include refid="COLUMN"/>
        from
        <include refid="TABLE"/>
        where name = #{name}
    </select>

    <select id="selectProjectById" resultMap="BaseResultMap">
        select
        <include refid="COLUMN"/>
        from
        <include refid="TABLE"/>
        where project_id = #{projectId}
    </select>

    <!--多表查询，查询项目组件-->
    <select id="selectProjectInfoById" resultMap="BaseResultMap">
        select *
        from t_project p
            left join t_project_module pm on p.project_id = pm.project_id
            left join t_module_build m on pm.module_build_id = m.module_build_id
        where p.project_id = #{projectId}
    </select>

</mapper>